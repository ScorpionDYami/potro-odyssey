/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

package mx.itson.potroodyssey.ui;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import mx.itson.potroodyssey.entidades.Entrenador;
import mx.itson.potroodyssey.entidades.Potromon;

/**
 *
 * @author Kevin
 */
public class PotromonForm extends javax.swing.JDialog {

    int id;
    
    /**
     * Constructor de la clase `PotromonForm`. Este constructor inicializa el
     * formulario y carga los datos del `potromon` especificado por el `id` si
     * es diferente de 0. Si el `id` es 0, el formulario se inicializa para
     * crear un nuevo `potromon`. Los datos del `potromon` (nombre, descripción,
     * y entrenador) se cargan desde la base de datos y se asignan a los campos
     * correspondientes del formulario.
     *
     * @param parent La ventana principal o el formulario padre desde el cual se
     * abre este formulario.
     * @param modal Indica si el formulario debe ser modal o no. Si es `true`,
     * el formulario bloqueará la interacción con el formulario principal hasta
     * que se cierre.
     * @param id El ID del `potromon` que se desea mostrar o editar. Si es `0`,
     * el formulario será para crear un nuevo `potromon`.
     */
    public PotromonForm(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        
        this.id = id;
        if(id != 0){
            Potromon p = Potromon.getById(id);
            txtNombre.setText(p.getNombre());
            txtaDescripcion.setText(p.getDescripcion());
            //cmbEntrenadores.setSelectedItem(p.getEntrenador());
            
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaDescripcion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        cmbEntrenadores = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtPuntaje = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Potromon");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Descripción:");

        txtaDescripcion.setColumns(20);
        txtaDescripcion.setLineWrap(true);
        txtaDescripcion.setRows(5);
        txtaDescripcion.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtaDescripcion);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Entrenador:");

        cmbEntrenadores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Puntaje:");

        btnAceptar.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(36, 36, 36)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cmbEntrenadores, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbEntrenadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnAceptar)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Este método se ejecuta cuando el usuario hace clic en el botón "Aceptar"
     * del formulario. Su propósito es obtener los datos ingresados por el
     * usuario, como el nombre, la descripción, el entrenador seleccionado y el
     * puntaje. Luego, dependiendo de si el formulario está en modo de creación
     * o edición, se guarda o actualiza la información del `Potromon` en la base
     * de datos.
     *
     * Si el `id` es 0 (modo creación), se crea un nuevo `Potromon` con los
     * datos ingresados. Si el `id` es distinto de 0 (modo edición), se
     * actualizan los datos de un `Potromon` existente.
     *
     * @param evt El evento generado al hacer clic en el botón "Aceptar".
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        String nombre = txtNombre.getText();
        String descripcion = txtaDescripcion.getText();
        String nombreEntrenador =  cmbEntrenadores.getSelectedItem().toString();
        List<Entrenador> entrenadores = Entrenador.getAll();
        int idEntrenador = 0;
        int puntaje = Integer.parseInt(txtPuntaje.getText()) + Potromon.getById(id).getPuntaje();
        
       
        for(int i=0;i<entrenadores.size();i++){
            if(nombreEntrenador.equals(entrenadores.get(i).getNombre())){
                idEntrenador = entrenadores.get(i).getId();
                break;
            }
        }
        
       
        
        
        
        boolean resultado = this.id == 0 ?
                Potromon.save(nombre, descripcion, idEntrenador, puntaje) :
                Potromon.edit(id, nombre, descripcion, idEntrenador, puntaje);
        if(resultado){
            JOptionPane.showMessageDialog(this, "El registro se guardó correctamente", "Entrenador guardado", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Ocurrió un error al intentar guardar el registro", "Error al guardar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed
    
    /**
     * Este método se ejecuta al abrir la ventana del formulario. Su función es
     * cargar los entrenadores disponibles en un `ComboBox`, para que el usuario
     * pueda seleccionarlos al interactuar con el formulario.
     *
     * @param evt El evento generado cuando la ventana se abre.
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarEntrenadoresEnComboBox();
    }//GEN-LAST:event_formWindowOpened

    /**
     * Este método carga la lista de entrenadores disponibles en un `ComboBox`
     * para que el usuario pueda seleccionarlos. Además, si se está editando un
     * `Potromon`, selecciona automáticamente el entrenador asignado a ese
     * `Potromon` en el `ComboBox`.
     */
    private void cargarEntrenadoresEnComboBox() {
        List<Entrenador> entrenadores = Entrenador.getAll();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (Entrenador entrenador : entrenadores) {
            model.addElement(entrenador.getNombre());  
        }

        cmbEntrenadores.setModel(model);
        
        Potromon p = Potromon.getById(id);

        if (p != null && p.getEntrenador() != null) {
            String entrenadorNombre = p.getEntrenador().getNombre();

            for (int i = 0; i < model.getSize(); i++) {
                if (model.getElementAt(i).equals(entrenadorNombre)) {
                    cmbEntrenadores.setSelectedIndex(i);
                    break;
                }
            }
        } else {
            cmbEntrenadores.setSelectedIndex(0);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PotromonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PotromonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PotromonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PotromonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PotromonForm dialog = new PotromonForm(new javax.swing.JFrame(), true, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox<String> cmbEntrenadores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPuntaje;
    private javax.swing.JTextArea txtaDescripcion;
    // End of variables declaration//GEN-END:variables

}
