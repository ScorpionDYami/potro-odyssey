/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package mx.itson.potroodyssey.ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.itson.potroodyssey.entidades.Habilidad;

/**
 *
 * @author yato_
 */
public class HabilidadListado extends javax.swing.JDialog {

    int id;
    
    /**
     * Constructor de la clase `HabilidadListado`. Este constructor inicializa
     * el formulario que lista las habilidades y configura el identificador de
     * la habilidad que se pasará como parámetro.
     *
     * @param parent El cuadro de diálogo o ventana principal que contiene este
     * formulario.
     * @param modal Indica si el formulario debe ser modal, lo que significa que
     * bloquea la interacción con otras ventanas hasta que se cierre.
     * @param id El identificador de la habilidad. Este valor se utiliza para
     * identificar la habilidad en el contexto de la lista o para posibles
     * operaciones adicionales relacionadas con esa habilidad.
     */
    public HabilidadListado(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        
        this.id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHabilidades = new javax.swing.JTable();
        btnAprender = new javax.swing.JButton();
        btnOlvidar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Habilidades");

        tblHabilidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Descripcion"
            }
        ));
        jScrollPane1.setViewportView(tblHabilidades);

        btnAprender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAprender.setText("Aprender");
        btnAprender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprenderActionPerformed(evt);
            }
        });

        btnOlvidar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnOlvidar.setText("Olvidar");
        btnOlvidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOlvidarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAprender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOlvidar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAprender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOlvidar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterar)
                        .addGap(48, 48, 48))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método manejador de eventos para el botón "Aprender". Este método se
     * ejecuta cuando el usuario hace clic en el botón "Aprender" en el
     * formulario. Abre un formulario para agregar una nueva habilidad para el
     * `potromon` relacionado con el `id`, y luego recarga la tabla para
     * reflejar cualquier cambio.
     *
     * @param evt El evento generado por la acción de hacer clic en el botón
     * "Aprender".
     */
    private void btnAprenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprenderActionPerformed
        HabilidadForm form = new HabilidadForm(this, true, 0, id);
        form.setVisible(true);
        
        cargarTabla();
    }//GEN-LAST:event_btnAprenderActionPerformed

    /**
     * Método manejador de eventos que se ejecuta cuando la ventana del
     * formulario se ha abierto. Este método carga los datos de las habilidades
     * en la tabla y elimina la primera columna de la tabla.
     *
     * @param evt El evento generado cuando la ventana se abre (accionado por el
     * sistema cuando la ventana se hace visible).
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTabla();
        tblHabilidades.removeColumn(tblHabilidades.getColumnModel().getColumn(0));
    }//GEN-LAST:event_formWindowOpened
    
    /**
     * Método manejador de eventos para el botón "Olvidar". Este método se
     * ejecuta cuando el usuario hace clic en el botón "Olvidar" en el
     * formulario. Elimina una habilidad previamente asignada a un `potromon`,
     * muestra un cuadro de confirmación y luego recarga la tabla para reflejar
     * cualquier cambio.
     *
     * @param evt El evento generado por la acción de hacer clic en el botón
     * "Olvidar".
     */
    private void btnOlvidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOlvidarActionPerformed
        int renglon = tblHabilidades.getSelectedRow();
        int idHabilidad = Integer.parseInt(tblHabilidades.getModel().getValueAt(renglon, 0).toString());

        if (JOptionPane.showConfirmDialog(this, "¿Estas seguro que deseas olvidar esta habilidad?", "Olvidar habilidar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (Habilidad.delete(idHabilidad)) {
                JOptionPane.showMessageDialog(this, "La habilidad fue olvidada con éxito", "Habilidad olvidada", JOptionPane.INFORMATION_MESSAGE);
                cargarTabla();
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrio un error al intenar olvidar la habilidad", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnOlvidarActionPerformed

    /**
     * Método manejador de eventos para el botón "Alterar". Este método se
     * ejecuta cuando el usuario hace clic en el botón "Alterar" en el
     * formulario. Abre un formulario para editar una habilidad existente
     * asociada a un `potromon` específico, y luego recarga la tabla para
     * reflejar cualquier cambio realizado.
     *
     * @param evt El evento generado por la acción de hacer clic en el botón
     * "Alterar".
     */
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int renglon = tblHabilidades.getSelectedRow();
        int idHabilidad = Integer.parseInt(tblHabilidades.getModel().getValueAt(renglon, 0).toString());
        
        HabilidadForm form = new HabilidadForm(this, true, idHabilidad, id);
        form.setVisible(true);
        
        cargarTabla();
    }//GEN-LAST:event_btnAlterarActionPerformed

    /**
     * Método para cargar los datos de las habilidades en la tabla
     * `tblHabilidades`. Este método obtiene una lista de habilidades asociadas
     * a un `potromon` específico mediante su `id`, y luego llena la tabla con
     * los datos de esas habilidades.
     */
    private void cargarTabla(){
        List<Habilidad> habilidades = Habilidad.getListById(id);
        DefaultTableModel modeloTabla = (DefaultTableModel)tblHabilidades.getModel();
        modeloTabla.setRowCount(0);
        for(Habilidad h : habilidades) {
            modeloTabla.addRow(new Object[] { 
                h.getId(),
                h.getNombre(),
                h.getDescripcion()
            });
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HabilidadListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HabilidadListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HabilidadListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HabilidadListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HabilidadListado dialog = new HabilidadListado(new javax.swing.JFrame(), true, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAprender;
    private javax.swing.JButton btnOlvidar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHabilidades;
    // End of variables declaration//GEN-END:variables
}
